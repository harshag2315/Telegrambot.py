import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
import pytz
import teacher
import admin
import student_classes
import openai
import sheet_data

list_teacher=[]
list_admin=[]
list_admin_urgent=[]
list_teacher_urgent=[]
list_update_teacher=[]
# here is to enter API TOKEN generated by telegram(botfather)
bot_token = # telegram bot token id
# here is to enter API key generated by openai
openai.api_key= # open ai key


# Create an instance of the TeleBot class
bot = telebot.TeleBot(bot_token)

# Create a custom inline keyboard with menu options
menu_markup = InlineKeyboardMarkup()
student_button = InlineKeyboardButton("Student", callback_data="student")
teacher_button = InlineKeyboardButton("Teacher", callback_data="teacher")
admin_button = InlineKeyboardButton("Admin", callback_data="admin")
common_notice_button = InlineKeyboardButton("Common Notices", url=# url link)
chat_gpt_button = InlineKeyboardButton("ChatGPT", callback_data="chat_gpt")
menu_markup.row(student_button)
menu_markup.row(teacher_button)
menu_markup.row(admin_button)
menu_markup.row(common_notice_button)
menu_markup.row(chat_gpt_button)

# Create a custom inline keyboard with menu options for student portal
menu_markup_student = InlineKeyboardMarkup()
student_attendence_button = InlineKeyboardButton("Student Attendence", callback_data="student_attendence")
notice_button = InlineKeyboardButton("Notices", url=# url link)
student_exit_button=InlineKeyboardButton("Exit to main menu", callback_data="exit")
menu_markup_student.row(student_attendence_button)
menu_markup_student.row(notice_button)
menu_markup_student.row(student_exit_button)

menu_markup_teacher = InlineKeyboardMarkup()
update_button = InlineKeyboardButton("Update Data", callback_data="update_button")
apply_for_leave_button=InlineKeyboardButton("Apply for Leave", callback_data="apply_for_leave_button")
urgent_message_button=InlineKeyboardButton("Urgent Message",callback_data="urgent_message_button")
notice_button = InlineKeyboardButton("Notices", url=# url link)
student_exit_button=InlineKeyboardButton("Exit to main menu", callback_data="exit")
menu_markup_teacher.row(update_button)
menu_markup_teacher.row(apply_for_leave_button)
menu_markup_teacher.row(urgent_message_button)
menu_markup_teacher.row(notice_button)
menu_markup_teacher.row(student_exit_button)

menu_markup_admin=InlineKeyboardMarkup()
admin1_button=InlineKeyboardButton("Admin1", callback_data="admin1_button")
admin2_button=InlineKeyboardButton("Admin2", callback_data="admin2_button")
menu_markup_admin.row(admin1_button)
menu_markup_admin.row(admin2_button)


menu_markup_admin1 = InlineKeyboardMarkup()
see_apply_for_leave_button = InlineKeyboardButton("See Leave by teacher", callback_data="see_apply_for_leave_button")
see_urgent_message_button =InlineKeyboardButton("See Urgent Message", callback_data="see_urgent_message_button")
see_student_attendence_button=InlineKeyboardButton("See Student Attendence",callback_data="student_attendence")
see_teacher_update_button = InlineKeyboardButton("See teacher update Logs", url=# url link
exit_button=InlineKeyboardButton("Exit to main menu", callback_data="exit")
menu_markup_admin1.row(see_apply_for_leave_button)
menu_markup_admin1.row(see_urgent_message_button)
menu_markup_admin1.row(see_student_attendence_button)
menu_markup_admin1.row(see_teacher_update_button)
menu_markup_admin1.row(exit_button)

menu_markup_admin2 = InlineKeyboardMarkup()
admmin_urgent_message_button =InlineKeyboardButton("Enter Urgent Message", callback_data="admin_urgent_message_button")
admin_apply_for_leave_button = InlineKeyboardButton("Apply for Leave", callback_data="admin_apply_for_leave_button")
exit_button=InlineKeyboardButton("Exit to main menu", callback_data="exit")
menu_markup_admin2.row(admmin_urgent_message_button)
menu_markup_admin2.row(admin_apply_for_leave_button)
menu_markup_admin2.row(exit_button)



# Create a custom inline keyboard with menu options for chat gpt
menu_markup_chat = InlineKeyboardMarkup()
contibue_chat_button = InlineKeyboardButton("Talk Again!!", callback_data="continue_chat_button")
exit_button=InlineKeyboardButton("Exit to main menu", callback_data="exit")
menu_markup_chat.row(contibue_chat_button)
menu_markup_chat.row(exit_button)

menu_markup_date_full=InlineKeyboardMarkup()
menu_markup_date_full.row(InlineKeyboardButton('1', callback_data='1'), InlineKeyboardButton('2', callback_data='2'), InlineKeyboardButton('3', callback_data='3'), InlineKeyboardButton('4', callback_data='4'), InlineKeyboardButton('5', callback_data='5'))
menu_markup_date_full.row(InlineKeyboardButton('6', callback_data='6'), InlineKeyboardButton('7', callback_data='7'), InlineKeyboardButton('8', callback_data='8'), InlineKeyboardButton('9', callback_data='9'), InlineKeyboardButton('10', callback_data='10'))
menu_markup_date_full.row(InlineKeyboardButton('11', callback_data='11'), InlineKeyboardButton('12', callback_data='12'), InlineKeyboardButton('13', callback_data='13'), InlineKeyboardButton('14', callback_data='14'), InlineKeyboardButton('15', callback_data='15'))
menu_markup_date_full.row(InlineKeyboardButton('16', callback_data='16'), InlineKeyboardButton('17', callback_data='17'), InlineKeyboardButton('18', callback_data='18'), InlineKeyboardButton('19', callback_data='19'), InlineKeyboardButton('20', callback_data='20'))
menu_markup_date_full.row(InlineKeyboardButton('21', callback_data='21'), InlineKeyboardButton('22', callback_data='22'), InlineKeyboardButton('23', callback_data='23'), InlineKeyboardButton('24', callback_data='24'), InlineKeyboardButton('25', callback_data='25'))
menu_markup_date_full.row(InlineKeyboardButton('26', callback_data='26'), InlineKeyboardButton('27', callback_data='27'), InlineKeyboardButton('28', callback_data='28'), InlineKeyboardButton('29', callback_data='29'), InlineKeyboardButton('30', callback_data='30'))
menu_markup_date_full.row(InlineKeyboardButton('31', callback_data='31'))

menu_markup_date_med=InlineKeyboardMarkup()
menu_markup_date_med.row(InlineKeyboardButton('1', callback_data='1'), InlineKeyboardButton('2', callback_data='2'), InlineKeyboardButton('3', callback_data='3'), InlineKeyboardButton('4', callback_data='4'), InlineKeyboardButton('5', callback_data='5'))
menu_markup_date_med.row(InlineKeyboardButton('6', callback_data='6'), InlineKeyboardButton('7', callback_data='7'), InlineKeyboardButton('8', callback_data='8'), InlineKeyboardButton('9', callback_data='9'), InlineKeyboardButton('10', callback_data='10'))
menu_markup_date_med.row(InlineKeyboardButton('11', callback_data='11'), InlineKeyboardButton('12', callback_data='12'), InlineKeyboardButton('13', callback_data='13'), InlineKeyboardButton('14', callback_data='14'), InlineKeyboardButton('15', callback_data='15'))
menu_markup_date_med.row(InlineKeyboardButton('16', callback_data='16'), InlineKeyboardButton('17', callback_data='17'), InlineKeyboardButton('18', callback_data='18'), InlineKeyboardButton('19', callback_data='19'), InlineKeyboardButton('20', callback_data='20'))
menu_markup_date_med.row(InlineKeyboardButton('21', callback_data='21'), InlineKeyboardButton('22', callback_data='22'), InlineKeyboardButton('23', callback_data='23'), InlineKeyboardButton('24', callback_data='24'), InlineKeyboardButton('25', callback_data='25'))
menu_markup_date_med.row(InlineKeyboardButton('26', callback_data='26'), InlineKeyboardButton('27', callback_data='27'), InlineKeyboardButton('28', callback_data='28'), InlineKeyboardButton('29', callback_data='29'), InlineKeyboardButton('30', callback_data='30'))

menu_markup_date_feb_29=InlineKeyboardMarkup()
menu_markup_date_feb_29.row(InlineKeyboardButton('1', callback_data='1'), InlineKeyboardButton('2', callback_data='2'), InlineKeyboardButton('3', callback_data='3'), InlineKeyboardButton('4', callback_data='4'), InlineKeyboardButton('5', callback_data='5'))
menu_markup_date_feb_29.row(InlineKeyboardButton('6', callback_data='6'), InlineKeyboardButton('7', callback_data='7'), InlineKeyboardButton('8', callback_data='8'), InlineKeyboardButton('9', callback_data='9'), InlineKeyboardButton('10', callback_data='10'))
menu_markup_date_feb_29.row(InlineKeyboardButton('11', callback_data='11'), InlineKeyboardButton('12', callback_data='12'), InlineKeyboardButton('13', callback_data='13'), InlineKeyboardButton('14', callback_data='14'), InlineKeyboardButton('15', callback_data='15'))
menu_markup_date_feb_29.row(InlineKeyboardButton('16', callback_data='16'), InlineKeyboardButton('17', callback_data='17'), InlineKeyboardButton('18', callback_data='18'), InlineKeyboardButton('19', callback_data='19'), InlineKeyboardButton('20', callback_data='20'))
menu_markup_date_feb_29.row(InlineKeyboardButton('21', callback_data='21'), InlineKeyboardButton('22', callback_data='22'), InlineKeyboardButton('23', callback_data='23'), InlineKeyboardButton('24', callback_data='24'), InlineKeyboardButton('25', callback_data='25'))
menu_markup_date_feb_29.row(InlineKeyboardButton('26', callback_data='26'), InlineKeyboardButton('27', callback_data='27'), InlineKeyboardButton('28', callback_data='28'), InlineKeyboardButton('29', callback_data='29'))

menu_markup_date_feb_28=InlineKeyboardMarkup()
menu_markup_date_feb_28.row(InlineKeyboardButton('1', callback_data='1'), InlineKeyboardButton('2', callback_data='2'), InlineKeyboardButton('3', callback_data='3'), InlineKeyboardButton('4', callback_data='4'), InlineKeyboardButton('5', callback_data='5'))
menu_markup_date_feb_28.row(InlineKeyboardButton('6', callback_data='6'), InlineKeyboardButton('7', callback_data='7'), InlineKeyboardButton('8', callback_data='8'), InlineKeyboardButton('9', callback_data='9'), InlineKeyboardButton('10', callback_data='10'))
menu_markup_date_feb_28.row(InlineKeyboardButton('11', callback_data='11'), InlineKeyboardButton('12', callback_data='12'), InlineKeyboardButton('13', callback_data='13'), InlineKeyboardButton('14', callback_data='14'), InlineKeyboardButton('15', callback_data='15'))
menu_markup_date_feb_28.row(InlineKeyboardButton('16', callback_data='16'), InlineKeyboardButton('17', callback_data='17'), InlineKeyboardButton('18', callback_data='18'), InlineKeyboardButton('19', callback_data='19'), InlineKeyboardButton('20', callback_data='20'))
menu_markup_date_feb_28.row(InlineKeyboardButton('21', callback_data='21'), InlineKeyboardButton('22', callback_data='22'), InlineKeyboardButton('23', callback_data='23'), InlineKeyboardButton('24', callback_data='24'), InlineKeyboardButton('25', callback_data='25'))
menu_markup_date_feb_28.row(InlineKeyboardButton('26', callback_data='26'), InlineKeyboardButton('27', callback_data='27'))

menu_markup_month=InlineKeyboardMarkup()
menu_markup_month.row(InlineKeyboardButton('January', callback_data="january"), InlineKeyboardButton('Febuary', callback_data="febuary"), InlineKeyboardButton('March', callback_data="march"))
menu_markup_month.row(InlineKeyboardButton('April', callback_data="april"), InlineKeyboardButton('May', callback_data="may"), InlineKeyboardButton('June', callback_data="june"))
menu_markup_month.row(InlineKeyboardButton('July', callback_data="july"), InlineKeyboardButton('August', callback_data="august"), InlineKeyboardButton('September', callback_data="september"))
menu_markup_month.row(InlineKeyboardButton('October', callback_data="october"), InlineKeyboardButton('November', callback_data="november"), InlineKeyboardButton('December', callback_data="december"))

#admin date menu
menu_markup_date_full_admin=InlineKeyboardMarkup()
menu_markup_date_full_admin.row(InlineKeyboardButton('1', callback_data='1_admin'), InlineKeyboardButton('2', callback_data='2_admin'), InlineKeyboardButton('3', callback_data='3_admin'), InlineKeyboardButton('4', callback_data='4_admin'), InlineKeyboardButton('5', callback_data='5_admin'))
menu_markup_date_full_admin.row(InlineKeyboardButton('6', callback_data='6_admin'), InlineKeyboardButton('7', callback_data='7_admin'), InlineKeyboardButton('8', callback_data='8_admin'), InlineKeyboardButton('9', callback_data='9_admin'), InlineKeyboardButton('10', callback_data='10_admin'))
menu_markup_date_full_admin.row(InlineKeyboardButton('11', callback_data='11_admin'), InlineKeyboardButton('12', callback_data='12_admin'), InlineKeyboardButton('13', callback_data='13_admin'), InlineKeyboardButton('14', callback_data='14_admin'), InlineKeyboardButton('15', callback_data='15_admin'))
menu_markup_date_full_admin.row(InlineKeyboardButton('16', callback_data='16_admin'), InlineKeyboardButton('17', callback_data='17_admin'), InlineKeyboardButton('18', callback_data='18_admin'), InlineKeyboardButton('19', callback_data='19_admin'), InlineKeyboardButton('20', callback_data='20_admin'))
menu_markup_date_full_admin.row(InlineKeyboardButton('21', callback_data='21_admin'), InlineKeyboardButton('22', callback_data='22_admin'), InlineKeyboardButton('23', callback_data='23_admin'), InlineKeyboardButton('24', callback_data='24_admin'), InlineKeyboardButton('25', callback_data='25_admin'))
menu_markup_date_full_admin.row(InlineKeyboardButton('26', callback_data='26_admin'), InlineKeyboardButton('27', callback_data='27_admin'), InlineKeyboardButton('28', callback_data='28_admin'), InlineKeyboardButton('29', callback_data='29_admin'), InlineKeyboardButton('30', callback_data='30_admin'))
menu_markup_date_full_admin.row(InlineKeyboardButton('31', callback_data='31_admin'))

menu_markup_date_med_admin=InlineKeyboardMarkup()
menu_markup_date_med_admin.row(InlineKeyboardButton('1', callback_data='1_admin'), InlineKeyboardButton('2', callback_data='2_admin'), InlineKeyboardButton('3', callback_data='3_admin'), InlineKeyboardButton('4', callback_data='4_admin'), InlineKeyboardButton('5', callback_data='5_admin'))
menu_markup_date_med_admin.row(InlineKeyboardButton('6', callback_data='6_admin'), InlineKeyboardButton('7', callback_data='7_admin'), InlineKeyboardButton('8', callback_data='8_admin'), InlineKeyboardButton('9', callback_data='9_admin'), InlineKeyboardButton('10', callback_data='10_admin'))
menu_markup_date_med_admin.row(InlineKeyboardButton('11', callback_data='11_admin'), InlineKeyboardButton('12', callback_data='12_admin'), InlineKeyboardButton('13', callback_data='13_admin'), InlineKeyboardButton('14', callback_data='14_admin'), InlineKeyboardButton('15', callback_data='15_admin'))
menu_markup_date_med_admin.row(InlineKeyboardButton('16', callback_data='16_admin'), InlineKeyboardButton('17', callback_data='17_admin'), InlineKeyboardButton('18', callback_data='18_admin'), InlineKeyboardButton('19', callback_data='19_admin'), InlineKeyboardButton('20', callback_data='20_admin'))
menu_markup_date_med_admin.row(InlineKeyboardButton('21', callback_data='21_admin'), InlineKeyboardButton('22', callback_data='22_admin'), InlineKeyboardButton('23', callback_data='23_admin'), InlineKeyboardButton('24', callback_data='24_admin'), InlineKeyboardButton('25', callback_data='25_admin'))
menu_markup_date_med_admin.row(InlineKeyboardButton('26', callback_data='26_admin'), InlineKeyboardButton('27', callback_data='27_admin'), InlineKeyboardButton('28', callback_data='28_admin'), InlineKeyboardButton('29', callback_data='29_admin'), InlineKeyboardButton('30', callback_data='30_admin'))

menu_markup_date_feb_29_admin=InlineKeyboardMarkup()
menu_markup_date_feb_29_admin.row(InlineKeyboardButton('1', callback_data='1_admin'), InlineKeyboardButton('2', callback_data='2_admin'), InlineKeyboardButton('3', callback_data='3_admin'), InlineKeyboardButton('4', callback_data='4_admin'), InlineKeyboardButton('5', callback_data='5_admin'))
menu_markup_date_feb_29_admin.row(InlineKeyboardButton('6', callback_data='6_admin'), InlineKeyboardButton('7', callback_data='7_admin'), InlineKeyboardButton('8', callback_data='8_admin'), InlineKeyboardButton('9', callback_data='9_admin'), InlineKeyboardButton('10', callback_data='10_admin'))
menu_markup_date_feb_29_admin.row(InlineKeyboardButton('11', callback_data='11_admin'), InlineKeyboardButton('12', callback_data='12_admin'), InlineKeyboardButton('13', callback_data='13_admin'), InlineKeyboardButton('14', callback_data='14_admin'), InlineKeyboardButton('15_admin', callback_data='15_admin'))
menu_markup_date_feb_29_admin.row(InlineKeyboardButton('16', callback_data='16_admin'), InlineKeyboardButton('17', callback_data='17_admin'), InlineKeyboardButton('18', callback_data='18_admin'), InlineKeyboardButton('19', callback_data='19_admin'), InlineKeyboardButton('20_admin', callback_data='20_admin'))
menu_markup_date_feb_29_admin.row(InlineKeyboardButton('21', callback_data='21_admin'), InlineKeyboardButton('22', callback_data='22_admin'), InlineKeyboardButton('23', callback_data='23_admin'), InlineKeyboardButton('24', callback_data='24_admin'), InlineKeyboardButton('25_admin', callback_data='25_admin'))
menu_markup_date_feb_29_admin.row(InlineKeyboardButton('26', callback_data='26_admin'), InlineKeyboardButton('27', callback_data='27_admin'), InlineKeyboardButton('28', callback_data='28_admin'), InlineKeyboardButton('29', callback_data='29_admin'))

menu_markup_date_feb_28_admin=InlineKeyboardMarkup()
menu_markup_date_feb_28_admin.row(InlineKeyboardButton('1', callback_data='1_admin'), InlineKeyboardButton('2', callback_data='2_admin'), InlineKeyboardButton('3', callback_data='3_admin'), InlineKeyboardButton('4', callback_data='4_admin'), InlineKeyboardButton('5', callback_data='5_admin'))
menu_markup_date_feb_28_admin.row(InlineKeyboardButton('6', callback_data='6_admin'), InlineKeyboardButton('7', callback_data='7_admin'), InlineKeyboardButton('8', callback_data='8_admin'), InlineKeyboardButton('9', callback_data='9_admin'), InlineKeyboardButton('10', callback_data='10_admin'))
menu_markup_date_feb_28_admin.row(InlineKeyboardButton('11', callback_data='11_admin'), InlineKeyboardButton('12', callback_data='12_admin'), InlineKeyboardButton('13', callback_data='13_admin'), InlineKeyboardButton('14', callback_data='14_admin'), InlineKeyboardButton('15', callback_data='15_admin'))
menu_markup_date_feb_28_admin.row(InlineKeyboardButton('16', callback_data='16_admin'), InlineKeyboardButton('17', callback_data='17_admin'), InlineKeyboardButton('18', callback_data='18_admin'), InlineKeyboardButton('19', callback_data='19_admin'), InlineKeyboardButton('20', callback_data='20_admin'))
menu_markup_date_feb_28_admin.row(InlineKeyboardButton('21', callback_data='21_admin'), InlineKeyboardButton('22', callback_data='22_admin'), InlineKeyboardButton('23', callback_data='23_admin'), InlineKeyboardButton('24', callback_data='24_admin'), InlineKeyboardButton('25', callback_data='25_admin'))
menu_markup_date_feb_28_admin.row(InlineKeyboardButton('26', callback_data='26_admin'), InlineKeyboardButton('27', callback_data='27_admin'))

menu_markup_month_admin=InlineKeyboardMarkup()
menu_markup_month_admin.row(InlineKeyboardButton('January', callback_data="january_admin"), InlineKeyboardButton('Febuary', callback_data="febuary_admin"), InlineKeyboardButton('March', callback_data="march_admin"))
menu_markup_month_admin.row(InlineKeyboardButton('April', callback_data="april_admin"), InlineKeyboardButton('May', callback_data="may_admin"), InlineKeyboardButton('June', callback_data="june_admin"))
menu_markup_month_admin.row(InlineKeyboardButton('July', callback_data="july_admin"), InlineKeyboardButton('August', callback_data="august_admin"), InlineKeyboardButton('September', callback_data="september_admin"))
menu_markup_month_admin.row(InlineKeyboardButton('October', callback_data="october_admin"), InlineKeyboardButton('November', callback_data="november_admin"), InlineKeyboardButton('December', callback_data="december_admin"))

menu_markup_home_teacher=InlineKeyboardMarkup()
menu_markup_home_teacher.row(InlineKeyboardButton('Exit to Teacher Menu', callback_data="teacher"))
menu_markup_home_teacher.row(InlineKeyboardButton('Exit to main menu', callback_data="exit"))

menu_markup_home_admin=InlineKeyboardMarkup()
menu_markup_home_admin.row(InlineKeyboardButton('Exit to Admin Menu', callback_data="admin"))
menu_markup_home_admin.row(InlineKeyboardButton('Exit to main menu', callback_data="exit"))

# Handle the /start command
@bot.message_handler(commands=['start'])
def handle_start(message):
    text = "Hello! I'm your Pardada Pardadi bot.\n\nPlease select your role:"
    bot.send_message(message.chat.id, text, reply_markup=menu_markup)

@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, "Help Section is under update")

# Handle callback queries from the menu options
@bot.callback_query_handler(func=lambda query: True)
def handle_callback_query(query):
    chat_id = query.message.chat.id
    data = query.data
    store_user_input(chat_id, data)
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {data}')

    if data == "student":
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Welcome, Student Attendence Portal!", reply_markup=menu_markup_student)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data == "teacher":
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Welcome, Teacher!", reply_markup=menu_markup_teacher)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="update_button":
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter full name:")
            bot.register_next_step_handler(query.message, handle_teacher_update_name)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="apply_for_leave_button":
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter full name:")
            bot.register_next_step_handler(query.message, handle_teacher_name_leave_input)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="duration_apply_for_leave_button":
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter Duration of leave:")
            handle_starting_date_leave_button(chat_id, "year", 2023)
            bot.register_next_step_handler(query.message, handle_duration_leave_button)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="january" or data=="march" or data=="may" or data=="july" or data=="august" or data=="october" or data=="december":
        handle_starting_date_leave_button(chat_id, "month", data)
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter Date of leave:", reply_markup=menu_markup_date_full)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="april" or data=="june" or data=="september" or data=="november" :
        handle_starting_date_leave_button(chat_id, "month", data)
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter Date of leave:", reply_markup=menu_markup_date_med)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="febuary" :
        handle_starting_date_leave_button(chat_id, "month", data)
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter Date of leave:", reply_markup=menu_markup_date_feb_28)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=='1' or data=='2' or data=='3' or data=='4' or data=='5' or data=='6' or data=='7' or data=='8' or data=='9' or data=='10' or data=='11' or data=='12' or data=='13' or data=='14' or data=='15' or data=='16' or data=='17' or data=='18' or data=='19' or data=='20' or data=='21' or data=='22' or data=='23' or data=='24' or data=='25' or data=='26' or data=='27' or data=='28' or data=='29' or data=='30' or data=='31':
        handle_starting_date_leave_button(chat_id, "date", data)
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter Reason for leave:")
            bot.register_next_step_handler(query.message, handle_leave_teacher_reason)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="urgent_message_button":
        if teacher.is_teacher(chat_id):
            bot.send_message(chat_id, "Enter Name:")
            bot.register_next_step_handler(query.message, handle_urgent_teacher_name)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")


    elif data == "admin":
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Welcome, Admin!", reply_markup=menu_markup_admin)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data == "admin1_button":
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Welcome, Admin!", reply_markup=menu_markup_admin1)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data == "admin2_button":
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Welcome, Admin!", reply_markup=menu_markup_admin2)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="admin_urgent_message_button":
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Enter your name:")
            bot.register_next_step_handler(query.message, handle_urgent_admin_name)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="admin_apply_for_leave_button":
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Enter full name:")
            bot.register_next_step_handler(query.message, handle_admin_name_leave_input)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="january_admin" or data=="march_admin" or data=="may_admin" or data=="july_admin" or data=="august_admin" or data=="october_admin" or data=="december_admin":
        handle_starting_date_leave_button_admin(chat_id, "month", data)
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Enter Date of leave:", reply_markup=menu_markup_date_full_admin)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="april_admin" or data=="june_admin" or data=="september_admin" or data=="november_admin" :
        handle_starting_date_leave_button_admin(chat_id, "month", data)
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Enter Date of leave:", reply_markup=menu_markup_date_med_admin)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=="febuary_admin" :
        handle_starting_date_leave_button_admin(chat_id, "month", data)
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Enter Date of leave:", reply_markup=menu_markup_date_feb_28_admin)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data=='1_admin' or data=='2_admin' or data=='3_admin' or data=='4_admin' or data=='5_admin' or data=='6_admin' or data=='7_admin' or data=='8_admin' or data=='9_admin' or data=='10_admin' or data=='11_admin' or data=='12_admin' or data=='13_admin' or data=='14_admin' or data=='15_admin' or data=='16_admin' or data=='17_admin' or data=='18_admin' or data=='19_admin' or data=='20_admin' or data=='21_admin' or data=='22_admin' or data=='23_admin' or data=='24_admin' or data=='25_admin' or data=='26_admin' or data=='27_admin' or data=='28_admin' or data=='29_admin' or data=='30_admin' or data=='31_admin':
        handle_starting_date_leave_button_admin(chat_id, "date", data)
        if admin.is_admin(chat_id):
            bot.send_message(chat_id, "Enter Reason for leave:")
            bot.register_next_step_handler(query.message, handle_leave_admin_reason)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")


    elif data == "chat_gpt":
        if teacher.is_teacher(chat_id) or admin.is_admin(chat_id):
            bot.send_message(chat_id, "Welcome to ChatGPT")
            bot.send_message(chat_id, "Please enter your input:")
            bot.register_next_step_handler(query.message, handle_chat_input)
        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data == "student_attendence":
        if teacher.is_teacher(chat_id) or admin.is_admin(chat_id):
            student_classes.is_class(bot, data, chat_id)

        else:
            bot.send_message(chat_id, "You are not verified to use this option")

    elif data == "class_prep" or data == "class_1" or data == "class_2" or data == "class_3" or data == "class_4" or data == "class_5" or data == "class_6":
        if teacher.is_teacher(chat_id):
            student_classes.is_class(bot, data, chat_id)

    elif data == "class_7" or data == "class_8" or data == "class_9" or data == "class_10" or data == "class_11" or data == "class_12":
        if teacher.is_teacher(chat_id):
            student_classes.is_class(bot, data, chat_id)

    elif data == "exit":
        bot.send_message(chat_id, "Returning to main menu.", reply_markup=menu_markup)

    elif data=="continue_chat_button":
        bot.send_message(chat_id, "Please enter your input:")
        bot.register_next_step_handler(query.message, handle_chat_input)

    else:
        bot.send_message(chat_id, "Invalid Input")

def handle_chat_input(message):
    chat_id = message.chat.id
    user_input = message.text
    store_user_input(chat_id, user_input)
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: chat_gpt: {user_input}')
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=user_input,
        max_tokens=1000,
        n=1,
        stop=None,
        temperature=0.7
    )
    bot.send_message(chat_id, response.choices[0].text.strip())
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: bot: chat_gpt: {response.choices[0].text.strip()}\n')
    bot.send_message(chat_id,"Enter your choice:" , reply_markup=menu_markup_chat)
    with open("user_input.txt", "a") as file:
        file.write(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: chat_gpt: {user_input}\n')
        file.write(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: bot: chat_gpt: {response.choices[0].text.strip()}')

def handle_teacher_name_leave_input(message):
    chat_id=message.chat.id
    user_input=message.text
    teacher_name_leave=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Duration of Leave:")
    bot.register_next_step_handler(message, handle_duration_leave_button)
    sheet_data.store_data_leave(chat_id, "name", teacher_name_leave, list_teacher)

def handle_duration_leave_button(message):
    chat_id=message.chat.id
    user_input=message.text
    teacher_duration_leave=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter month of Leave:", reply_markup=menu_markup_month)
    sheet_data.store_data_leave(chat_id, "duration", teacher_duration_leave, list_teacher)
    handle_starting_date_leave_button(chat_id, "year", 2023)

def handle_starting_date_leave_button(chat_id, type, message):
    user_input=message
    if type=="year":
        user_input_year_starting_date_leave_button=2023
        sheet_data.store_data_leave(chat_id, "year", user_input_year_starting_date_leave_button, list_teacher)
    if type=="month":
        user_input_month_starting_date_leave_button=user_input
        sheet_data.store_data_leave(chat_id, "month", user_input_month_starting_date_leave_button, list_teacher)
    elif type=="date":
        user_input_date_starting_date_leave_buttton=user_input
        sheet_data.store_data_leave(chat_id, "date", user_input_date_starting_date_leave_buttton, list_teacher)

def handle_leave_teacher_reason(message):
    chat_id=message.chat.id
    user_input=message.text
    leave_teacher_reason=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Thanks for entering data")
    bot.send_message(5901986845, f"{chat_id} has applied for leave")
    sheet_data.store_data_leave(chat_id, "reason", leave_teacher_reason, list_teacher)
    bot.send_message(chat_id, "Exit:", reply_markup=menu_markup_home_teacher)

def handle_urgent_teacher_name(message):
    chat_id=message.chat.id
    user_input=message.text
    urgent_teacher_name=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter contact number:")
    bot.register_next_step_handler(message, handle_urgent_teacher_contact)
    sheet_data.store_data_urgent_teacher(chat_id, "name", urgent_teacher_name, list_teacher_urgent)

def handle_urgent_teacher_contact(message):
    chat_id=message.chat.id
    user_input=message.text
    urgent_teacher_contact=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Urgent Message:")
    bot.register_next_step_handler(message, handle_urgent_teacher_message)
    sheet_data.store_data_urgent_teacher(chat_id, "contact", urgent_teacher_contact,list_teacher_urgent)

def handle_urgent_teacher_message(message):
    chat_id=message.chat.id
    user_input=message.text
    urgent_teacher_message=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Thanks for entering message")
    sheet_data.store_data_urgent_teacher(chat_id, "message", urgent_teacher_message, list_teacher_urgent)
    bot.send_message(5901986845, f"{chat_id} sent a urgent message")
    bot.send_message(chat_id, "Exit:", reply_markup=menu_markup_home_teacher)

def handle_teacher_update_name(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_name=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Class:")
    bot.register_next_step_handler(message, handle_teacher_update_class)
    sheet_data.store_data_update_teacher(chat_id, "name", update_teacher_name, list_update_teacher)

def handle_teacher_update_class(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_class=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Section:")
    bot.register_next_step_handler(message, handle_teacher_update_section)
    sheet_data.store_data_update_teacher(chat_id, "class", update_teacher_class, list_update_teacher)

def handle_teacher_update_section(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_section=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    update_teacher_date=datetime.now(tz).strftime("%Y-%m-%d")
    bot.send_message(chat_id, "Enter Subject:")
    bot.register_next_step_handler(message, handle_teacher_update_subject)
    sheet_data.store_data_update_teacher(chat_id, "section", update_teacher_section, list_update_teacher)
    sheet_data.store_data_update_teacher(chat_id, "date", update_teacher_date, list_update_teacher)

def handle_teacher_update_subject(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_subject=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Period of Subject:")
    bot.register_next_step_handler(message, handle_teacher_update_period)
    sheet_data.store_data_update_teacher(chat_id, "subject", update_teacher_subject, list_update_teacher)

def handle_teacher_update_period(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_period=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Topic:")
    bot.register_next_step_handler(message, handle_teacher_update_topic)
    sheet_data.store_data_update_teacher(chat_id, "period", update_teacher_period, list_update_teacher)

def handle_teacher_update_topic(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_topic=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Sub-Topic:")
    bot.register_next_step_handler(message, handle_teacher_update_sub_topic)
    sheet_data.store_data_update_teacher(chat_id, "topic", update_teacher_topic, list_update_teacher)

def handle_teacher_update_sub_topic(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_sub_topic=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Activity Type:")
    bot.register_next_step_handler(message, handle_teacher_update_activity_type)
    sheet_data.store_data_update_teacher(chat_id, "sub_topic", update_teacher_sub_topic, list_update_teacher)

def handle_teacher_update_activity_type(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_activity_type=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Activity Details:")
    bot.register_next_step_handler(message, handle_teacher_update_activity_details)
    sheet_data.store_data_update_teacher(chat_id, "activity_type", update_teacher_activity_type, list_update_teacher)

def handle_teacher_update_activity_details(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_activity_details=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Challenges:")
    bot.register_next_step_handler(message, handle_teacher_update_challenges)
    sheet_data.store_data_update_teacher(chat_id, "activity_detail", update_teacher_activity_details, list_update_teacher)

def handle_teacher_update_challenges(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_challenges=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Comments/Thoughts:")
    bot.register_next_step_handler(message, handle_teacher_update_comments)
    sheet_data.store_data_update_teacher(chat_id, "challenge", update_teacher_challenges, list_update_teacher)

def handle_teacher_update_comments(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_comments=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Follow-Ups:")
    bot.register_next_step_handler(message, handle_teacher_update_follow)
    sheet_data.store_data_update_teacher(chat_id, "comment", update_teacher_comments, list_update_teacher)

def handle_teacher_update_follow(message):
    chat_id=message.chat.id
    user_input=message.text
    update_teacher_follow=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Thanks for updating data")
    bot.send_message(chat_id, "Exit:", reply_markup=menu_markup_home_teacher)
    sheet_data.store_data_update_teacher(chat_id, "follow", update_teacher_follow, list_update_teacher)

def handle_urgent_admin_name(message):
    chat_id=message.chat.id
    user_input=message.text
    urgent_admin_name=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter contact number:")
    bot.register_next_step_handler(message, handle_urgent_admin_contact)
    sheet_data.store_data_urgent_admin(chat_id, "name", urgent_admin_name, list_admin_urgent)

def handle_urgent_admin_contact(message):
    chat_id=message.chat.id
    user_input=message.text
    urgent_admin_contact=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Urgent Message:")
    bot.register_next_step_handler(message, handle_urgent_admin_message)
    sheet_data.store_data_urgent_admin(chat_id, "contact", urgent_admin_contact, list_admin_urgent)

def handle_urgent_admin_message(message):
    chat_id=message.chat.id
    user_input=message.text
    urgent_admin_message=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Thanks for entering message")
    sheet_data.store_data_urgent_admin(chat_id, "message", urgent_admin_message, list_admin_urgent)
    bot.send_message(5901986845, f"{chat_id} sent a urgent message")
    bot.send_message(5901986845, f"The message is '{urgent_admin_message}'")
    #bot.send_message(6225801949, f"{chat_id} sent a urgent message")
   # bot.send_message(6225801949, f"The message is '{urgent_admin_message}'")
    bot.send_message(chat_id, "Exit:", reply_markup=menu_markup_home_admin)

def handle_admin_name_leave_input(message):
    chat_id=message.chat.id
    user_input=message.text
    admin_name_leave=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter Duration of Leave:")
    bot.register_next_step_handler(message, handle_duration_leave_button_admin)
    sheet_data.store_data_leave_admin(chat_id, "name", admin_name_leave, list_admin)

def handle_duration_leave_button_admin(message):
    chat_id=message.chat.id
    user_input=message.text
    admin_duration_leave=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Enter month of Leave:", reply_markup=menu_markup_month_admin)
    sheet_data.store_data_leave_admin(chat_id, "duration", admin_duration_leave, list_admin)
    handle_starting_date_leave_button_admin(chat_id, "year", 2023)

def handle_starting_date_leave_button_admin(chat_id, type, message):
    user_input=message
    if type=="year":
        user_input_year_starting_date_leave_button_admin=2023
        sheet_data.store_data_leave_admin(chat_id, "year", user_input_year_starting_date_leave_button_admin, list_admin)
    if type=="month":
        user_input_month_starting_date_leave_button_admin=user_input
        sheet_data.store_data_leave_admin(chat_id, "month", user_input_month_starting_date_leave_button_admin, list_admin)
    elif type=="date":
        user_input_date_starting_date_leave_buttton_admin=user_input
        sheet_data.store_data_leave_admin(chat_id, "date", user_input_date_starting_date_leave_buttton_admin, list_admin)

def handle_leave_admin_reason(message):
    chat_id=message.chat.id
    user_input=message.text
    leave_admin_reason=user_input
    tz=pytz.timezone('Asia/Kolkata')
    print(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {user_input}')
    store_user_input(chat_id, user_input)
    bot.send_message(chat_id, "Thanks for entering data")
    bot.send_message(5901986845, f"{chat_id} had applied for leave")
    #bot.send_message(6225801949, f"{chat_id} has applied for leave")
    sheet_data.store_data_leave_admin(chat_id, "reason", leave_admin_reason, list_admin)
    bot.send_message(chat_id, "Exit:", reply_markup=menu_markup_home_admin)

def store_user_input(chat_id, data):
    filename = "user_input.txt"
    tz=pytz.timezone('Asia/Kolkata')
    with open(filename, "a") as file:
        file.write(f'{datetime.now(tz).strftime("%Y-%m-%d")}: {datetime.now(tz).strftime("%H:%M:%S")}: {chat_id}: {data}\n')


# Start the bot
bot.polling()
